<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lizhan.system.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lizhan.system.model.User">
    <id column="ID" jdbcType="CHAR" property="id" />
    <result column="ACCOUNT" jdbcType="VARCHAR" property="account" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="MOBILE_NUMBER" jdbcType="VARCHAR" property="mobileNumber" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="PASSWORD" jdbcType="CHAR" property="password" />
    <result column="ORG_ID" jdbcType="CHAR" property="orgId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ACCOUNT, EMAIL, MOBILE_NUMBER, NICKNAME, PASSWORD, ORG_ID, CREATE_TIME, CREATE_USER
  </sql>
  <select id="selectByExample" parameterType="com.lizhan.system.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lizhan.system.model.UserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lizhan.system.model.User">
    insert into sys_user (ID, ACCOUNT, EMAIL, 
      MOBILE_NUMBER, NICKNAME, PASSWORD, 
      ORG_ID, CREATE_TIME, CREATE_USER
      )
    values (#{id,jdbcType=CHAR}, #{account,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobileNumber,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{orgId,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lizhan.system.model.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="account != null">
        ACCOUNT,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="mobileNumber != null">
        MOBILE_NUMBER,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="orgId != null">
        ORG_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lizhan.system.model.UserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.account != null">
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileNumber != null">
        MOBILE_NUMBER = #{record.mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.orgId != null">
        ORG_ID = #{record.orgId,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set ID = #{record.id,jdbcType=CHAR},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      MOBILE_NUMBER = #{record.mobileNumber,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=CHAR},
      ORG_ID = #{record.orgId,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lizhan.system.model.User">
    update sys_user
    <set>
      <if test="account != null">
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        MOBILE_NUMBER = #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=CHAR},
      </if>
      <if test="orgId != null">
        ORG_ID = #{orgId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lizhan.system.model.User">
    update sys_user
    set ACCOUNT = #{account,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      MOBILE_NUMBER = #{mobileNumber,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=CHAR},
      ORG_ID = #{orgId,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=CHAR}
  </update>
</mapper>